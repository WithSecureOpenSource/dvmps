#!/usr/bin/python
#
#    Munin plugin for libvirt
#
#    Copyright (C) 2008 Canonical Ltd.
#
#	 Authors:
#    Julien Rottenberg
#    Steven Wagner
#    Soren Hansen <soren@canonical.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Modified by Heikki Nousiainen, F-Secure
# Only report the amount of virtual machines running
# Our virtual machines generally have a lifetime of 5 to 10 minutes

import sys
from os import environ as env
from os import walk
from os.path import join, getsize, islink, isfile

def dirsize(path):
    size = 0
    for root, dirs, files in walk(path):
        for name in files:
            full_name = join(root, name)
            if isfile(full_name) and not islink(full_name):
                size = size + getsize(full_name)
    return size

# Default settings
dirs = [('active_images','/var/lib/libvirt/dvmps_active/images/'),
        ('base_images','/var/lib/libvirt/images/')]

# Get overrides from environment
for key in ['dirs']:
    if key in env:
        locals()[key] = eval(env[key], None)

if len(dirs) == 0:
    print 'No directories configured'
    sys.exit(1)

if len(sys.argv) == 2:
    if sys.argv[1] == "config":
        print "graph_title directory sizes"
        print "graph_vlabel bytes"
        print "graph_args --base 1024 -l 0"
        print "graph_category Virtual Machines"
        for k,d in dirs:
            print "%s.label %s" % (k,k)
        sys.exit(0)

for k,d in dirs:
    print "%s.value %d" % (k,dirsize(d))

