#!/bin/sh

### BEGIN INIT INFO
# Provides:          dvmps
# Required-Start:    $local_fs $network libvirtd nginx
# Required-Stop:     $local_fs $network libvirtd nginx
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts DVMPS services
# Description:       starts DVMPS services using start-stop-daemon
### END INIT INFO

NAME=dvmps
DESC="Dynamic Virtual Machine Provisioning Service"
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
PYTHON=/usr/bin/python
export PATH

DVMPS_PATH=/usr/share/dvmps
DVMPS_SERVER=$DVMPS_PATH/DVMPSWSGIFlup.py
DVMPS_DATABASE=dvmps
DVMPS_LOGFILE=/var/log/dvmps/dvmps.log
DVMPS_RUN_PATH=/var/run/dvmps
DVMPS_SOCKET=$DVMPS_RUN_PATH/fcgi-dvmps-1.socket
DVMPS_PIDFILE=$DVMPS_RUN_PATH/fcgi-dvmps-1.pid

DVMPS_PLACEMENT_AGENT=$DVMPS_PATH/DVMPSPlacementAgent.py
DVMPS_PLACEMENT_AGENT_LOGFILE=/var/log/dvmps/dvmps-pa.log
DVMPS_PLACEMENT_AGENT_PIDFILE=$DVMPS_RUN_PATH/dvmps-pa.pid

test -x $PYTHON || exit 0
test -f $DVMPS_SERVER || exit 0

if test -f /etc/default/dvmps; then
    . /etc/default/dvmps
fi

. /lib/lsb/init-functions

prepare_system() {
    echo 1 > /sys/kernel/mm/ksm/run
    echo 1000 > /sys/kernel/mm/ksm/pages_to_scan

    KSMD_PID=`pidof ksmd`
    if [ -n "$KSMD_PID" ]
    then
        renice -1 $KSMD_PID > /dev/null
    fi
}

start_server() {
    mkdir -p -m 755 $DVMPS_RUN_PATH
    OPTS="-f $DVMPS_SOCKET -d $DVMPS_DATABASE -l $DVMPS_LOGFILE"
    PA_OPTS="-l $DVMPS_PLACEMENT_AGENT_LOGFILE -i $DVMPS_CLUSTER"
    start-stop-daemon --start --quiet --pidfile $DVMPS_PIDFILE \
        --make-pidfile --background \
        --startas $PYTHON -- $DVMPS_SERVER $OPTS || true
    start-stop-daemon --start --quiet --pidfile $DVMPS_PLACEMENT_AGENT_PIDFILE \
        --make-pidfile --background \
        --startas $PYTHON -- $DVMPS_PLACEMENT_AGENT $PA_OPTS || true
}

stop_server() {
    start-stop-daemon --stop --quiet --pidfile $DVMPS_PLACEMENT_AGENT_PIDFILE \
        && rm -f $DVMPS_PLACEMENT_AGENT_PIDFILE || true
    start-stop-daemon --stop --quiet --pidfile $DVMPS_PIDFILE \
        && rm -f $DVMPS_PIDFILE || true
}

case "$1" in
  start)
    echo -n "Starting $DESC: "
    prepare_system
    start_server
    echo "$NAME."
    ;;
  stop|force-stop)
    echo -n "Stopping $DESC: "
    stop_server
    echo "$NAME."
    ;;
  restart|reload|force-reload)
    echo -n "Restarting $DESC: "
    stop_server
    sleep 1
    prepare_system
    start_server
    echo "$NAME."
    ;;
  status)
    status_of_proc -p $DVMPS_PIDFILE "DVMPS_SERVER" dvmps || true
    status_of_proc -p $DVMPS_PLACEMENT_AGENT_PIDFILE "DVMPS_PLACEMENT_AGENT" dvmps-pa || true
    ;;
  *)
    echo "Usage: $NAME {start|stop|force-stop|restart|reload|force-reload|status}" >&2
    exit 1
    ;;
esac

exit 0
